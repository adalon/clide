<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Package" InitialTargets="Configure" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<IntermediateOutputPath>$(MSBuildThisFileDirectory)build\</IntermediateOutputPath>
		<Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
		<Out Condition=" '$(Out)' == '' ">$([System.IO.Path]::Combine($(MSBuildThisFileDirectory), 'out'))</Out>
		<GitInfoReportImportance>high</GitInfoReportImportance>
	</PropertyGroup>

	<ItemGroup>
		<RestoreSolution Include="src\Clide.sln" />
	</ItemGroup>

	<Target Name="Clean">
		<Exec Command="rmdir $(Out) /S /Q" ContinueOnError="true" />
		<Exec Command="rmdir .nuget\packages /S /Q" ContinueOnError="true" />
		<Exec Command="rmdir packages /S /Q" ContinueOnError="true" />
	</Target>

	<Target Name="Build" DependsOnTargets="GitVersion">
		<PropertyGroup>
			<Version>$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)$(GitSemVerDashLabel)</Version>
			<Args>-Version $(Version) -NoPackageAnalysis -NonInteractive -OutputDirectory $(Out)</Args>
		</PropertyGroup>

		<ItemGroup>
			<Solution Include="src\Clide\Clide.csproj">
				<NuSpec>src\Clide.nuspec</NuSpec>
				<Id>Clide</Id>
				<Version>$(Version)</Version>
			</Solution>
		</ItemGroup>

		<MSBuild Projects="@(Solution)" Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Package" DependsOnTargets="Build">
		<MakeDir Directories="$(Out)" Condition=" !Exists('$(Out)') " />
		<Exec Command='"$(NuGet)" Pack "%(Solution.NuSpec)" $(Args) -Properties Id=%(Solution.Id);Configuration=$(Configuration)'
			  Condition=" Exists('%(Solution.NuSpec)') " />
	</Target>

	<Target Name="Publish" DependsOnTargets="Package">
		<Exec Command='$(NuGet) Push "$(Out)\%(Solution.Id).%(Solution.Version).nupkg" $(NuGetPushArgs)'
						StandardErrorImportance="high"
						StandardOutputImportance="normal" />

		<Message Text="Published new package: Id=%(Solution.Id), Version=%(Solution.Version)"
				 Importance="high" />
	</Target>
	
	<Import Project="src\NuGet.Restore.targets" />

	<!-- Setup/Configure/Restore -->
	<PropertyGroup>
		<BuildDir>build\</BuildDir>
		<PackagesDir>$(BuildDir)packages\</PackagesDir>
		<!-- This file is used to detect whether the restore has been performed or not -->
		<GitInfoTargets>$(PackagesDir)GitInfo\build\GitInfo.targets</GitInfoTargets>
		<PendingRestore Condition=" !Exists('$(GitInfoTargets)') ">true</PendingRestore>
	</PropertyGroup>
	<Import Project="$(GitInfoTargets)" Condition="Exists('$(GitInfoTargets)')"/>

	<Target Name="Configure" DependsOnTargets="_GetNuGet"  Condition=" '$(PendingRestore)' == 'true' ">
		<!-- We always run NuGet Install since it already checks for already-installed packages and skips them -->
		<Exec Command='"$(NuGet)" Install "$(BuildDir)packages.config" -OutputDirectory "$(PackagesDir)" -ExcludeVersion' />
		<!-- The Wrench build script will pass the Target property as Configure on the configure step, and therefore will properly skip the error -->
		<Error Text="Build-time packages were missing and were just restored. Please run the build again." Condition=" '$(Target)' != 'Configure' " />
	</Target>

</Project>